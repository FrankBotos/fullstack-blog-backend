type User {
  id: ID!
  name: String!
  email: String!
  age: Int
  uniquenickname: String!
  password: String!
}

type Post {
  id: ID!
  userid: ID!
  title: String!
  content: String!
  slug: String!
  lastupdate: String
  views: Int
}

type Comment {
  id: ID!
  userid: ID!
  postid: ID!
  content: String!
  lastupdate: String
}

type Bookmark {
  id: ID!
  userid: ID!
  postid: ID!
}

type FavoriteUser {
  id: ID!
  userid: ID!
  favoriteuserid: ID!
}

type Query {
  users: [User!]!
  user(id: ID!): User!
  userslug(slug: String!): User!

  posts: [Post!]!
  post(id: ID!): Post!
  postslug(slug: String!): Post!
  postuserid(userid: ID!): [Post!]!

  comments: [Comment!]!
  commentsbypostid(postid: ID!): [Comment!]!

  bookmarks(userid: ID!): [Bookmark!]!
  favoriteusers(userid: ID!) : [FavoriteUser!]!

  userLogin(username: String!, password: String!): User!


}

type Mutation {
  createUser(id: ID!, name: String!, email: String!, age: Int, uniquenickname: String!, password: String!): User!
  updateUser(id: ID!, name: String, email: String, age: Int): User!
  deleteUser(id: ID!): User!


  createPost(id: ID!, userid: ID!, title: String!, content: String!, slug: String!): Post!
  updatePost(id: ID!, title: String!, content: String!, slug: String!): Post!
  deletePost(id: ID!): Post!

  createComment(id: ID!, userid: ID!, postid: ID!, content: String!): Comment!
  deleteComment(id: ID!): Comment!

  incrementViews(postid: ID!): Post

  createBookmark(id: ID!, userid: ID!, postid: ID!): Bookmark!
  deleteBookmark(id: ID!): Bookmark!

  createFavoriteUser(id: ID!, userid: ID!, favoriteuserid: ID!): FavoriteUser!
  deleteFavoriteUser(id: ID!): FavoriteUser!
}
